@import "variables.less";

/* color palette from <https://github.com/vuejs/theme> */
:root {
    --color-background: var(--background-dark);
    --color-secondary-background: var(--secondary-background-dark);
    --color-text: var(--text-dark);
    --color-secondary-text: var(--secondary-text-dark);
    --color-link: var(--link-dark);
    --color-default-button: var(--default-button-dark);
    --color-default-button-text: var(--default-button-dark-text);
    --color-primary-button: var(--primary-button-dark);
    --color-primary-button-text: var(--primary-button-dark-text);
    --color-danger-button: var(--danger-button-dark);
    --color-danger-button-text: var(--danger-button-dark-text);
    --color-error: var(--error-dark);
    --color-success: var(--success-dark);
    color-scheme: dark;
}

@media (prefers-color-scheme: light) {
    :root {
        --color-background: var(--background-light);
        --color-secondary-background: var(--secondary-background-light);
        --color-text: var(--text-light);
        --color-secondary-text: var(--secondary-text-light);
        --color-link: var(--link-light);
        --color-default-button: var(--default-button-light);
        --color-default-button-text: var(--default-button-light-text);
        --color-primary-button: var(--primary-button-light);
        --color-primary-button-text: var(--primary-button-light-text);
        --color-danger-button: var(--danger-button-light);
        --color-danger-button-text: var(--danger-button-light-text);
        --color-error: var(--error-light);
        --color-success: var(--success-light);
        color-scheme: light;
    }
}

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        transition-duration: 0s !important;
        animation-duration: 0s !important;
        scroll-behavior: auto !important;
    }
}

@font-face {
    font-family: Code;
    font-display: swap;
    src:
        local("Cascadia Code"),
        url("https://static.jonathanbout.dev/CascadiaCode/woff2/CascadiaCode.woff2") format("woff2"),
        url("https://static.jonathanbout.dev/CascadiaCode/ttf/CascadiaCode.ttf") format("truetype"),
        url("https://static.jonathanbout.dev/CascadiaCode/CascadiaCode.ttf") format("truetype"),
        url("https://static.jonathanbout.dev/CascadiaCode/otf/static/CascadiaCodeNF-Regular.otf") format("opentype"),
        local("Cascadia Mono"),
        monospace;
}

* {
    text-wrap: pretty;
    color: var(--color-text);

    scroll-behavior: smooth;

    &,
    ::before,
    ::after {
        box-sizing: border-box;
        margin: 0;
        position: relative;
        font-weight: normal;
    }

    &:focus-visible {
        outline: 2px dashed var(--color-link);
        outline-offset: 4px;
        outline-style: dashed;
        z-index: 1000;
    }

    &:focus:not(:focus-visible) {
        outline-color: transparent;
    }
}

.link,
a {
    color: inherit;
    border: none;
    background-color: inherit;
    margin: 0;
    padding: 0;
    font: inherit;
    display: inline;
    padding: unset;
    cursor: pointer;

    text-decoration: underline 1px dotted;

    @media (prefers-contrast: no-preference), (prefers-contrast: less) {
        text-decoration: none;
    }

    @media (hover: hover) {
        &:hover,
        &:focus-visible {
            text-decoration: underline;
            color: var(--color-link);

            &[href^="https://"], &[href^="http://"]
            {
                &:not(.no-external-icon)::after {
                    --vertical-shift: -0.125em;
                    display: inline-block;
                    font-display: block;
                    font-family: bootstrap-icons !important;
                    font-style: normal;
                    font-weight: 600 !important;
                    font-variant: normal;

                    text-transform: none;
                    line-height: 1em;
                    font-size: calc(1em + var(--vertical-shift));
                    vertical-align: var(--vertical-shift);
                    -webkit-font-smoothing: antialiased;
                    -moz-osx-font-smoothing: grayscale;

                    margin-left: max(1ch, 5px);

                    content: "\f1c5";

                    animation: slide 0.1s ease-out;
                    animation-fill-mode: forwards;

                    text-decoration: none;

                    z-index: 100;

                    @keyframes slide {
                        0% {
                            width: 0;
                            opacity: 0;
                        }
                        100% {
                            width: 1em;
                            opacity: 1;
                        }
                    }
                }
            }
        }
    }
    &[href^="mailto:"] {
        &:not(.no-external-icon)::after {
            --vertical-shift: -0.125em;
            display: inline-block;
            font-display: block;
            font-family: bootstrap-icons !important;
            font-style: normal;
            font-weight: 200 !important;
            font-variant: normal;

            text-transform: none;
            line-height: 1em;
            font-size: calc(1em + var(--vertical-shift));
            vertical-align: var(--vertical-shift);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;

            margin-left: 5px;

            content: "\F32F";

            text-decoration: none;
        }
    }
}

textarea {
    font-family: Code;
}

button:not(.link),
a.button {
    font-family: inherit;
    font-size: 1em;
    padding: 0.1em 1em;
    border: 1px solid var(--color-primary-button-text);
    border-radius: 0.5em;
    cursor: pointer;
    transition:
        border 0.2s,
        color 0.2s;
    font-size: 1.2em;
    text-decoration: none;

    color: var(--color-default-button-text);
    background-color: var(--color-default-button);

    @media (hover: hover) {
        &:hover {
            outline: 2px solid var(--color-primary-button-text);
        }
    }

    &.primary {
        background-color: var(--color-primary-button);
        color: var(--color-primary-button-text);
    }

    &.danger {
        background-color: var(--color-danger-button);
        color: var(--color-danger-button-text);
    }
}

h1 {
    text-align: center;
}

.page-root {
    margin: 10px;
    margin-top: 50px;

    max-width: min(100%, 1000px);

    @media (width < @breakpoint) {
        width: 90%;
    }
}

.page-root:not(.custom-animation) {
    animation: scale-in 0.5s;

    :not(.no-load-animation):not(.load-animation *) {
        animation: slide-in 0.5s ease-in-out;
    }

    @keyframes scale-in {
        from {
            transform: scale(0.9);
            opacity: 0;
            overflow: visible;
        }
        to {
            transform: scale(1);
            opacity: 1;
            overflow: visible;
        }
    }

    @keyframes slide-in {
        from {
            transform: translateY(50dvh);
            overflow: visible;
        }

        to {
            transform: translateY(0);
            overflow: visible;
        }
    }
}

.form-description {
    margin-bottom: 1.5em;
    text-align: center;
}

form {
    overflow: auto;
    &,
    & > * {
        min-width: fit-content;
    }

    display: flex;
    flex-direction: column;

    width: 100%;

    align-items: center;

    .form-body {
        border: 1px solid @border-color;
        border-radius: 1em;
        padding: 2em;
        width: 100%;
        margin-bottom: 0.5em;
    }

    label {
        &:not(:last-of-type) {
            margin-bottom: 1rem;
        }
        display: grid;

        width: 100%;

        grid-template-columns: 1fr 3fr;

        @media (width >= @breakpoint) {            
            & > :not(span) {
                margin-left: 5rem;
                margin-left: 10rch;
            }
        }
    }

    input,
    textarea {
        padding: 0.5rem;
        border: 1px solid @border-color;
        border-radius: 0.25rem;
        background-color: var(--color-background);
    }

    textarea {
        resize: vertical;
        min-height: 25vh;
        overflow-y: auto;
    }

    button {
        grid-column: span 2;
        padding: 0.5rem;
        margin-bottom: 2rem;
        border: none;
        border-radius: 0.25rem;
        cursor: pointer;

        i {
            margin-inline-start: 0.4ch;
        }
    }

    .error {
        grid-column: span 2;
        margin-top: 4px;
        color: var(--color-error);

        animation: none;

        transition:
            scale 0.2s,
            opacity 1s;

        transform-origin: left center;

        &.visible {
            scale: 1 1;
        }

        &.hidden {
            scale: 0 0;
            opacity: 0;
        }
    }

    .buttons {
        display: flex;
        justify-content: space-evenly;
        gap: 1ch;
    }

    .yummy-stuff {
        position: fixed;
        top: -1px;
        left: -1px;
        height: 1px;
        width: 1px;
        color: transparent;
        overflow: hidden;
        background-color: transparent;
    }

    @media (width < @breakpoint) {
        label {
            grid-template-columns: 1fr;
            grid-template-rows: auto auto auto;
            grid-auto-flow: column;
        }
    }
}

[inert],
[inert] *,
*:has([inert]) {
    overflow: hidden !important;
}
